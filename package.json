{
  "name": "openzeppelin-solidity",
  "description": "Secure Smart Contract library for Solidity",
  "version": "4.5.0",
  "files": [
    "/contracts/**/*.sol",
    "/build/contracts/*.json",
    "!/contracts/mocks/**/*"
  ],
  "bin": {
    "openzeppelin-contracts-migrate-imports": "scripts/migrate-imports.js"
  },
  "scripts": {
    "compile": "hardhat compile",
    "coverage": "env COVERAGE=true hardhat coverage",
    "docs": "oz-docs",
    "docs:watch": "npm run docs watch contracts 'docs/*.hbs' docs/helpers.js",
    "prepare-docs": "scripts/prepare-docs.sh",
    "lint": "npm run lint:js && npm run lint:sol",
    "lint:fix": "npm run lint:js:fix && npm run lint:sol:fix",
    "lint:js": "eslint --ignore-path .gitignore .",
    "lint:js:fix": "eslint --ignore-path .gitignore . --fix",
    "lint:sol": "solhint 'contracts/**/*.sol' && prettier -c 'contracts/**/*.sol'",
    "lint:sol:fix": "prettier --write \"contracts/**/*.sol\"",
    "clean": "hardhat clean && rimraf build contracts/build",
    "prepare": "npm run clean && env COMPILE_MODE=production npm run compile",
    "prepack": "scripts/prepack.sh",
    "release": "scripts/release/release.sh",
    "version": "scripts/release/version.sh",
    "view": "echo %${npm_config_host}% & echo %npm_config_port%",
    "test:test": "hardhat test --network ${npm_config_network} --grep \"${npm_config_grep}\"",
    "test:axonLocal": "hardhat test --network axonLocal",
    "test:gwAlphanetTestnetV1": "hardhat test --network gwAlphanetTestnetV1",
    "test:axonTestNetLocalV1": "hardhat test --network local_eth",
    "test:axon_remote": "hardhat test --network axon_remote",
    "test:gwBetanetTestnetV1": "hardhat test --network gwBetanetTestnetV1",
    "test:gwTestnetV1": "hardhat test --network gwBetanetTestnetV1 --grep \"reverts when trying to transfer when paused\"",
    "test:bscTest": "hardhat test --network bscTest --grep \"Contract: ERC20Snapshot\"",
    "test:gw_testnet_v1": "hardhat test --network gwTestnetV1 --grep \"reverts when retrieving non-existent elements\"",
    "test:gwTestNetLocalV1": "hardhat test --network gwTestNetLocalV1 --grep \"clears the approval for the token I\"",
    "test:hardhat": "hardhat test --grep \"should add fallback function\"",
    "test:bsc_test": "hardhat test --network bscTest --grep \"Contract: Strings\"",
    "test:eth_local": "hardhat test --network eth_local --grep \"deploys a ERC20Mock with correct balances\"",
    "test:inheritance": "node scripts/inheritanceOrdering artifacts/build-info/*",
    "gas-report": "env ENABLE_GAS_REPORT=true npm run test",
    "sl ither": "npm run clean && slither . --detect reentrancy-eth,reentrancy-no-eth,reentrancy-unlimited-gas --filter-paths contracts/mocks",

    "test:AccessControl": "hardhat test --config ./hardhat.config.AccessControl.js --grep \"Contract: AccessControl \"",
    "test:AccessControlEnum": "hardhat test --config ./hardhat.config.AccessControlEnum.js --grep \"Contract: AccessControlEnum \"",
    "test:Ownable": "hardhat test --config ./hardhat.config.Ownable.js --grep \"Contract: Ownable \"",
    "test:CrossChainEnabled": "hardhat test --config ./hardhat.config.CrossChainEnabled.js --grep \"Contract: CrossChainEnabled \"",
    "test:PaymentSplitter": "hardhat test --config ./hardhat.config.PaymentSplitter.js --grep \"Contract: PaymentSplitter \"",
    "test:VestingWallet": "hardhat test --config ./hardhat.config.VestingWallet.js --grep \"Contract: VestingWallet \"",
    "test:GovernorCompatibilityBravo": "hardhat test --config ./hardhat.config.GovernorCompatibilityBravo.js --grep \"Contract: GovernorCompatibilityBravo \"",
    "test:GovernorComp": "hardhat test --config ./hardhat.config.GovernorComp.js --grep \"Contract: GovernorComp \"",
    "test:GovernorERC721Mock": "hardhat test --config ./hardhat.config.GovernorERC721Mock.js --grep \"Contract: GovernorERC721Mock \"",
    "test:GovernorPreventLateQuorum": "hardhat test --config ./hardhat.config.GovernorPreventLateQuorum.js --grep \"Contract: GovernorPreventLateQuorum \"",
    "test:GovernorTimelockCompound": "hardhat test --config ./hardhat.config.GovernorTimelockCompound.js --grep \"Contract: GovernorTimelockCompound \"",
    "test:GovernorTimelockControl": "hardhat test --config ./hardhat.config.GovernorTimelockControl.js --grep \"Contract: GovernorTimelockControl \"",
    "test:GovernorVotesQuorumFraction": "hardhat test --config ./hardhat.config.GovernorVotesQuorumFraction.js --grep \"Contract: GovernorVotesQuorumFraction \"",
    "test:GovernorWithParams": "hardhat test --config ./hardhat.config.GovernorWithParams.js --grep \"Contract: GovernorWithParams \"",
    "test:Governor": "hardhat test --config ./hardhat.config.Governor.js --grep \"Contract: Governor \"",
    "test:TimelockController": "hardhat test --config ./hardhat.config.TimelockController.js --grep \"Contract: TimelockController \"",
    "test:Votes": "hardhat test --config ./hardhat.config.Votes.js --grep \"Contract: Votes \"",
    "test:ERC2771Context": "hardhat test --config ./hardhat.config.ERC2771Context.js --grep \"Contract: ERC2771Context \"",
    "test:MinimalForwarder": "hardhat test --config ./hardhat.config.MinimalForwarder.js --grep \"Contract: MinimalForwarder \"",
    "test:BeaconProxy": "hardhat test --config ./hardhat.config.BeaconProxy.js --grep \"Contract: BeaconProxy \"",
    "test:UpgradeableBeacon": "hardhat test --config ./hardhat.config.UpgradeableBeacon.js --grep \"Contract: UpgradeableBeacon \"",
    "test:Clones": "hardhat test --config ./hardhat.config.Clones.js --grep \"Contract: Clones \"",
    "test:ERC1967Proxy": "hardhat test --config ./hardhat.config.ERC1967Proxy.js --grep \"Contract: ERC1967Proxy \"",
    "test:ProxyAdmin": "hardhat test --config ./hardhat.config.ProxyAdmin.js --grep \"Contract: ProxyAdmin \"",
    "test:TransparentUpgradeableProxy": "hardhat test --config ./hardhat.config.TransparentUpgradeableProxy.js --grep \"Contract: TransparentUpgradeableProxy \"",
    "test:Initializable": "hardhat test --config ./hardhat.config.Initializable.js --grep \"Contract: Initializable \"",
    "test:UUPSUpgradeable": "hardhat test --config ./hardhat.config.UUPSUpgradeable.js --grep \"Contract: UUPSUpgradeable \"",
    "test:Pausable": "hardhat test --config ./hardhat.config.Pausable.js --grep \"Contract: Pausable \"",
    "test:PullPayment": "hardhat test --config ./hardhat.config.PullPayment.js --grep \"Contract: PullPayment \"",
    "test:ReentrancyGuard": "hardhat test --config ./hardhat.config.ReentrancyGuard.js --grep \"Contract: ReentrancyGuard \"",
    "test:ERC1155": "hardhat test --config ./hardhat.config.ERC1155.js --grep \"Contract: ERC1155 \"",
    "test:ERC1155Burnable": "hardhat test --config ./hardhat.config.ERC1155Burnable.js --grep \"Contract: ERC1155Burnable \"",
    "test:ERC1155Pausable": "hardhat test --config ./hardhat.config.ERC1155Pausable.js --grep \"Contract: ERC1155Pausable \"",
    "test:ERC1155Supply": "hardhat test --config ./hardhat.config.ERC1155Supply.js --grep \"Contract: ERC1155Supply \"",
    "test:ERC1155URIStorage": "hardhat test --config ./hardhat.config.ERC1155URIStorage.js --grep \"Contract: ERC1155URIStorage \"",
    "test:ERC1155PresetMinterPauser": "hardhat test --config ./hardhat.config.ERC1155PresetMinterPauser.js --grep \"Contract: ERC1155PresetMinterPauser \"",
    "test:ERC1155Holder": "hardhat test --config ./hardhat.config.ERC1155Holder.js --grep \"Contract: ERC1155Holder \"",
    "test:ERC20Test": "hardhat test --config ./hardhat.config.ERC20Test.js --grep \"Contract: ERC20Test \"",
    "test:ERC20Permit": "hardhat test --config ./hardhat.config.ERC20Permit.js --grep \"Contract: ERC20Permit \"",
    "test:ERC20Burnable": "hardhat test --config ./hardhat.config.ERC20Burnable.js --grep \"Contract: ERC20Burnable \"",
    "test:ERC20Capped": "hardhat test --config ./hardhat.config.ERC20Capped.js --grep \"Contract: ERC20Capped \"",
    "test:ERC20FlashMint": "hardhat test --config ./hardhat.config.ERC20FlashMint.js --grep \"Contract: ERC20FlashMint \"",
    "test:ERC20Pausable": "hardhat test --config ./hardhat.config.ERC20Pausable.js --grep \"Contract: ERC20Pausable \"",
    "test:ERC20Snapshot": "hardhat test --config ./hardhat.config.ERC20Snapshot.js --grep \"Contract: ERC20Snapshot \"",
    "test:ERC20Votes": "hardhat test --config ./hardhat.config.ERC20Votes.js --grep \"Contract: ERC20Votes \"",
    "test:ERC20VotesComp": "hardhat test --config ./hardhat.config.ERC20VotesComp.js --grep \"Contract: ERC20VotesComp \"",
    "test:ERC20Wrapper": "hardhat test --config ./hardhat.config.ERC20Wrapper.js --grep \"Contract: ERC20Wrapper \"",
    "test:ERC20PresetFixedSupply": "hardhat test --config ./hardhat.config.ERC20PresetFixedSupply.js --grep \"Contract: ERC20PresetFixedSupply \"",
    "test:ERC20PresetMinterPauser": "hardhat test --config ./hardhat.config.ERC20PresetMinterPauser.js --grep \"Contract: ERC20PresetMinterPauser \"",
    "test:SafeERC20": "hardhat test --config ./hardhat.config.SafeERC20.js --grep \"Contract: SafeERC20 \"",
    "test:TokenTimelock": "hardhat test --config ./hardhat.config.TokenTimelock.js --grep \"Contract: TokenTimelock \"",
    "test:ERC721": "hardhat test --config ./hardhat.config.ERC721.js --grep \"Contract: ERC721 \"",
    "test:ERC721Enumerable": "hardhat test --config ./hardhat.config.ERC721Enumerable.js --grep \"Contract: ERC721Enumerable \"",
    "test:ERC721Burnable": "hardhat test --config ./hardhat.config.ERC721Burnable.js --grep \"Contract: ERC721Burnable \"",
    "test:ERC721Pausable": "hardhat test --config ./hardhat.config.ERC721Pausable.js --grep \"Contract: ERC721Pausable \"",
    "test:ERC721Royalty": "hardhat test --config ./hardhat.config.ERC721Royalty.js --grep \"Contract: ERC721Royalty \"",
    "test:ERC721URIStorage": "hardhat test --config ./hardhat.config.ERC721URIStorage.js --grep \"Contract: ERC721URIStorage \"",
    "test:ERC721Votes": "hardhat test --config ./hardhat.config.ERC721Votes.js --grep \"Contract: ERC721Votes \"",
    "test:ERC721PresetMinterPauserAutoId": "hardhat test --config ./hardhat.config.ERC721PresetMinterPauserAutoId.js --grep \"Contract: ERC721PresetMinterPauserAutoId \"",
    "test:ERC721Holder": "hardhat test --config ./hardhat.config.ERC721Holder.js --grep \"Contract: ERC721Holder \"",
    "test:ERC777": "hardhat test --config ./hardhat.config.ERC777.js --grep \"Contract: ERC777 \"",
    "test:ERC777PresetFixedSupply": "hardhat test --config ./hardhat.config.ERC777PresetFixedSupply.js --grep \"Contract: ERC777PresetFixedSupply \"",
    "test:Address": "hardhat test --config ./hardhat.config.Address.js --grep \"Contract: Address \"",
    "test:Arrays": "hardhat test --config ./hardhat.config.Arrays.js --grep \"Contract: Arrays \"",
    "test:Strings": "hardhat test --config ./hardhat.config.Strings.js --grep \"Contract: Strings \"",
    "test:Checkpoints": "hardhat test --config ./hardhat.config.Checkpoints.js --grep \"Contract: Checkpoints \"",
    "test:Context": "hardhat test --config ./hardhat.config.Context.js --grep \"Contract: Context \"",
    "test:Counters": "hardhat test --config ./hardhat.config.Counters.js --grep \"Contract: Counters \"",
    "test:Create2": "hardhat test --config ./hardhat.config.Create2.js --grep \"Contract: Create2 \"",
    "test:EIP712": "hardhat test --config ./hardhat.config.EIP712.js --grep \"Contract: EIP712 \"",
    "test:ECDSA": "hardhat test --config ./hardhat.config.ECDSA.js --grep \"Contract: ECDSA \"",
    "test:MerkleProof": "hardhat test --config ./hardhat.config.MerkleProof.js --grep \"Contract: MerkleProof \"",
    "test:SignatureChecker": "hardhat test --config ./hardhat.config.SignatureChecker.js --grep \"Contract: SignatureChecker \"",
    "test:ConditionalEscrow": "hardhat test --config ./hardhat.config.ConditionalEscrow.js --grep \"Contract: ConditionalEscrow \"",
    "test:Escrow": "hardhat test --config ./hardhat.config.Escrow.js --grep \"Contract: Escrow \"",
    "test:RefundEscrow": "hardhat test --config ./hardhat.config.RefundEscrow.js --grep \"Contract: RefundEscrow \"",
    "test:ERC165": "hardhat test --config ./hardhat.config.ERC165.js --grep \"Contract: ERC165 \"",
    "test:ERC165Checker": "hardhat test --config ./hardhat.config.ERC165Checker.js --grep \"Contract: ERC165Checker \"",
    "test:ERC165Storage": "hardhat test --config ./hardhat.config.ERC165Storage.js --grep \"Contract: ERC165Storage \"",
    "test:ERC1820Implementer": "hardhat test --config ./hardhat.config.ERC1820Implementer.js --grep \"Contract: ERC1820Implementer \"",
    "test:Math": "hardhat test --config ./hardhat.config.Math.js --grep \"Contract: Math \"",
    "test:SafeCast": "hardhat test --config ./hardhat.config.SafeCast.js --grep \"Contract: SafeCast \"",
    "test:SafeMath": "hardhat test --config ./hardhat.config.SafeMath.js --grep \"Contract: SafeMath \"",
    "test:SignedMath": "hardhat test --config ./hardhat.config.SignedMath.js --grep \"Contract: SignedMath \"",
    "test:SignedSafeMath": "hardhat test --config ./hardhat.config.SignedSafeMath.js --grep \"Contract: SignedSafeMath \"",
    "test:MulticallToken": "hardhat test --config ./hardhat.config.MulticallToken.js --grep \"Contract: MulticallToken \"",
    "test:StorageSlot": "hardhat test --config ./hardhat.config.StorageSlot.js --grep \"Contract: StorageSlot \"",
    "test:BitMap": "hardhat test --config ./hardhat.config.BitMap.js --grep \"Contract: BitMap \"",
    "test:DoubleEndedQueue": "hardhat test --config ./hardhat.config.DoubleEndedQueue.js --grep \"Contract: DoubleEndedQueue \"",
    "test:EnumerableMap": "hardhat test --config ./hardhat.config.EnumerableMap.js --grep \"Contract: EnumerableMap \"",
    "test:EnumerableSet": "hardhat test --config ./hardhat.config.EnumerableSet.js --grep \"Contract: EnumerableSet \"",
    "test:TimersBlockNumber": "hardhat test --config ./hardhat.config.TimersBlockNumber.js --grep \"Contract: TimersBlockNumber \"",
    "test:TimersTimestamp": "hardhat test --config ./hardhat.config.TimersTimestamp.js --grep \"Contract: TimersTimestamp \"",
    "test:init": "hardhat test --config ./hardhat.config.init.js --grep \"initAccount\"",
    "test:run51": "npm-run-all -p -c test:AccessControl test:AccessControlEnum test:Ownable test:CrossChainEnabled test:PaymentSplitter",
    "test:run52": "npm-run-all -p -c test:VestingWallet test:GovernorCompatibilityBravo test:GovernorComp test:GovernorERC721Mock test:GovernorPreventLateQuorum",
    "test:run53": "npm-run-all -p -c test:GovernorTimelockCompound test:GovernorTimelockControl test:GovernorVotesQuorumFraction test:GovernorWithParams test:Governor",
    "test:run54": "npm-run-all -p -c test:TimelockController test:Votes test:ERC2771Context test:MinimalForwarder test:BeaconProxy",
    "test:run55": "npm-run-all -p -c test:UpgradeableBeacon test:Clones test:ERC1967Proxy test:ProxyAdmin test:TransparentUpgradeableProxy",
    "test:run56": "npm-run-all -p -c test:Initializable test:UUPSUpgradeable test:Pausable test:PullPayment test:ReentrancyGuard",
    "test:run57": "npm-run-all -p -c test:ERC1155 test:ERC1155Burnable test:ERC1155Pausable test:ERC1155Supply test:ERC1155URIStorage",
    "test:run58": "npm-run-all -p -c test:ERC1155PresetMinterPauser test:ERC1155Holder test:ERC20Test test:ERC20Permit test:ERC20Burnable",
    "test:run59": "npm-run-all -p -c test:ERC20Capped test:ERC20FlashMint test:ERC20Pausable test:ERC20Snapshot test:ERC20Votes test:ERC20VotesComp",
    "test:run510": "npm-run-all -p -c test:ERC20Wrapper test:ERC20PresetFixedSupply test:ERC20PresetMinterPauser test:SafeERC20 test:TokenTimelock",
    "test:run511": "npm-run-all -p -c test:ERC721 test:ERC721Enumerable test:ERC721Burnable test:ERC721Pausable test:ERC721Royalty ",
    "test:run512": "npm-run-all -p -c test:ERC721URIStorage test:ERC721Votes test:ERC721PresetMinterPauserAutoId test:ERC721Holder test:ERC777",
    "test:run513": "npm-run-all -p -c test:ERC777PresetFixedSupply test:Address test:Arrays test:Strings test:Checkpoints test:Context ",
    "test:run514": "npm-run-all -p -c test:Counters test:Create2 test:EIP712 test:ECDSA test:MerkleProof",
    "test:run515": "npm-run-all -p -c test:SignatureCheckerERC test:ConditionalEscrow test:Escrow test:RefundEscrow test:ERC165",
    "test:run516": "npm-run-all -p -c test:ERC165Checker test:ERC165Storage test:ERC1820Implementer test:Math test:SafeCast",
    "test:run517": "npm-run-all -p -c test:SafeMath test:SignedMath test:SignedSafeMath test:MulticallToken test:StorageSlot",
    "test:run518": "npm-run-all -p -c test:Strings test:BitMap test:DoubleEndedQueue test:EnumerableMap test:EnumerableSet test:TimersBlockNumber test:TimersTimestamp"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/OpenZeppelin/openzeppelin-contracts.git"
  },
  "keywords": [
    "solidity",
    "ethereum",
    "smart",
    "contracts",
    "security",
    "zeppelin"
  ],
  "author": "OpenZeppelin Community <maintainers@openzeppelin.org>",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues"
  },
  "homepage": "https://openzeppelin.com/contracts/",
  "devDependencies": {
    "@nomiclabs/hardhat-truffle5": "^2.0.5",
    "@nomiclabs/hardhat-web3": "^2.0.0",
    "@openzeppelin/docs-utils": "^0.1.0",
    "@openzeppelin/test-helpers": "^0.5.13",
    "chai": "^4.2.0",
    "eslint": "^7.32.0",
    "eslint-config-standard": "^16.0.3",
    "eslint-plugin-import": "^2.25.4",
    "eslint-plugin-mocha": "^10.0.3",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-promise": "^5.2.0",
    "eth-sig-util": "^3.0.0",
    "ethereumjs-util": "^7.0.7",
    "ethereumjs-wallet": "^1.0.1",
    "graphlib": "^2.1.8",
    "hardhat": "^2.9.1",
    "hardhat-gas-reporter": "^1.0.4",
    "keccak256": "^1.0.2",
    "lodash.startcase": "^4.4.0",
    "lodash.zip": "^4.2.0",
    "merkletreejs": "^0.2.13",
    "micromatch": "^4.0.2",
    "prettier": "^2.3.0",
    "prettier-plugin-solidity": "^1.0.0-beta.16",
    "rimraf": "^3.0.2",
    "semver": "^7.3.5",
    "solhint": "^3.3.6",
    "solidity-ast": "^0.4.25",
    "solidity-coverage": "^0.7.18",
    "solidity-docgen": "^0.5.3",
    "web3": "^1.3.0",
    "yargs": "^17.0.0"
  },
  "dependencies": {
    "@nomiclabs/hardhat-waffle": "^2.0.3",
    "dotenv": "^16.0.1",
    "ethers": "^5.6.9",
    "hpagent": "^0.1.2",
    "http": "0.0.1-security",
    "http-proxy-agent": "^5.0.0",
    "mochawesome": "^7.1.3",
    "mochawesome-report-generator": "^6.2.0",
    "npm-run-all": "^4.1.5"
  }
}
